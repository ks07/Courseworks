OPENMP Coursework Notes
=======================

1) Compile using tau and run to get profiler results.

Total runtime unoptimised: 4:03.525
Slowest function is collision()

2) Modify collision() to stop recomputing curr_cell

New time is 3:53.237

3) Collision again, directional velocity

This was stupid, slower. 3:54.088

4) See the effect when switching to -O3

Much much faster, 1:51.143

5) Try naiive parallel for in collision

Down to 38.661s

6) Try adding omp_set_nested(1)

At 38.586 - negligible

7) Attempt parallelisation of accelerate_flow

Slower! 39.146

8) That was silly, par av_velocity with a reduction after checking next in prof

Down to 27.279!

9) Next to par is propagate

DOWN TO 9.756s MO-FOS.

10) Par reduction on total_density

Negligible effect, now at 9.760s

11) Try total_density with fewer threads.

Same as above. 9.771s

12) Revert to serial total_density

Back to 9.754s

13) Parallel in rebound

Slightly faster @ 8.952

14) Re-compile with tau and check new timings

Highest times on parallelfor body <308,387> - collision().
Followed by barrier entry/exit on <308,387> and <266,283> and others.

15) Try manually storing w1|w2 * local_density

Slower - 9.138s

16) Revert 15. Try collapsing nested collision loops manually.

Slower - 9.912s

17) Stop calculating rows/cols in collapsed loop.

Now at 9.054s - assuming no change to original nested loops.

18) 
